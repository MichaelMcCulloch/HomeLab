---
- name: Prepare environment
  hosts: cluster
  become: true
  tasks:
    - name: Configure enp2s0 interface for Ceph traffic
      ansible.builtin.template:
        src: interfaces.j2
        dest: /etc/network/interfaces.d/enp2s0
        mode: "0755"
      notify: Restart networking
      vars:
        ansible_interface: enp2s0
        ansible_address: "{{ cluster_ip[inventory_hostname][1] }}"
        ansible_netmask: "{{ netmask }}"

    - name: Find enx8 interface
      ansible.builtin.set_fact:
        enx8_interface: "{{ ansible_interfaces | select('match', '^enx8.*') | first }}"

    - name: Configure enx8 interface for OpenStack and Kubernetes gossip traffic
      ansible.builtin.template:
        src: interfaces.j2
        dest: "/etc/network/interfaces.d/{{ enx8_interface }}"
        mode: "0755"
      notify: Restart networking
      vars:
        ansible_interface: "{{ enx8_interface }}"
        ansible_address: "{{ cluster_ip[inventory_hostname][0] }}"
        ansible_netmask: "{{ netmask }}"
        ansible_gateway: "{{ gateway }}"

    - name: Generate a gossip ssh keyparing
      when: "inventory_hostname == groups['cluster'][0]"
      ansible.builtin.shell:
        cmd: "ssh-keygen -q -t rsa -N '' -f ~/.ssh/{{ gossip_ssh_private_key_file }} <<<y >/dev/null 2>&1"
      args:
        executable: /bin/bash
        creates: "~/.ssh/{{ gossip_ssh_private_key_file }}"
      changed_when: true

    - name: Update /etc/hosts file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['cluster_ip'][item][0] }} {{ item }}"
      loop: "{{ groups['cluster'] }}"

    - name: Update system packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: safe

    - name: Install required apt packages
      ansible.builtin.apt:
        name:
          - ifupdown
          - vlan
          - ntp
          - ufw
          - xfsprogs
          - default-libmysqlclient-dev
        state: present

    - name: Install required pip packages
      ansible.builtin.pip:
        name: mysqlclient
        state: present

    - name: Configure NTP
      ansible.builtin.template:
        src: ntp.conf.j2
        dest: /etc/ntp.conf
        mode: "0755"
      notify: Restart NTP


  handlers:
    - name: Restart networking
      become: true
      ansible.builtin.service:
        name: networking
        state: restarted

    - name: Restart NTP
      ansible.builtin.service:
        name: ntp
        state: restarted
