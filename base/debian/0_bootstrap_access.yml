---
- name: Configure nodes with authorized key
  hosts: cluster
  tasks:
    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        exclusive: true
        key: "{{ lookup('file', ansible_ssh_public_key_file) }}"

    - name: Update /etc/hosts file
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['cluster_ip'][item][0] }} {{ item }}"
      loop: "{{ groups['cluster'] }}"

- name: Configure nodes with Non Free firmware Repositories
  become: true
  hosts: cluster
  tasks:
    - name: Add non-free to sources.list
      ansible.builtin.replace:
        path: /etc/apt/sources.list
        regexp: "^(deb|deb-src)(.*)(?<!non-free)$"
        replace: '\1\2 non-free'

    - name: Run apt update
      ansible.builtin.apt:
        update_cache: true

    - name: Run apt upgrade
      ansible.builtin.apt:
        upgrade: safe

- name: Install non-free wifi firmware
  hosts: cluster
  become: true
  tasks:
    - name: Install firmware-iwlwifi
      ansible.builtin.apt:
        name:
          - firmware-iwlwifi
          - firmware-realtek
        state: present

    - name: Reload iwlwifi module
      block:
        - name: Remove iwlwifi module
          ansible.builtin.command:
            cmd: modprobe -r iwlwifi
          changed_when: false
          failed_when: false

        - name: Load iwlwifi module
          ansible.builtin.command:
            cmd: modprobe iwlwifi
          changed_when: false
          failed_when: false

    - name: Reload realtek module
      block:
        - name: Remove realtek module
          ansible.builtin.command:
            cmd: modprobe -r realtek
          changed_when: false
          failed_when: false

        - name: Load realtek module
          ansible.builtin.command:
            cmd: modprobe realtek
          changed_when: false
          failed_when: false

- name: Prepare environment
  hosts: cluster
  become: true
  tasks:
    - name: Configure ceph_interface interface for Ceph traffic
      ansible.builtin.template:
        src: interfaces.j2
        dest: /etc/network/interfaces.d/{{ ceph_interface}}
        mode: "0755"
      vars:
        ansible_interface: "{{ ceph_interface }}"
        ansible_address: "{{ cluster_ip[inventory_hostname][1] }}"
        ansible_netmask: "{{ netmask }}"

    - name: Configure lan_interface interface for OpenStack and Kubernetes gossip traffic
      ansible.builtin.template:
        src: interfaces.j2
        dest: "/etc/network/interfaces.d/{{ lan_interface }}"
        mode: "0755"
      vars:
        ansible_interface: "{{ lan_interface }}"
        ansible_address: "{{ cluster_ip[inventory_hostname][0] }}"
        ansible_netmask: "{{ netmask }}"
        ansible_gateway: "{{ gateway }}"

    - name: Configure ad-hoc network interface
      copy:
        content: |
          auto wlp3s0
          iface wlp3s0 inet static
              address 12.0.0.{{ 100 + (inventory_hostname[-1:]) | int }}
              netmask 255.255.255.0
              wireless-mode ad-hoc
              wireless-essid adhoc_network
              wireless-channel 36
        dest: /etc/network/interfaces.d/wlp3s0
        owner: root
        group: root
        mode: 0644

    - name: Restart networking
      become: true
      ansible.builtin.service:
        name: networking
        state: restarted

- name: Set up ad-hoc network on Debian 11 nodes
  hosts: cluster
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - wpasupplicant
          - wireless-tools
          - iproute2
        state: present

    - name: Configure wpa_supplicant for ad-hoc network
      copy:
        content: |
          ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
          update_config=1
          ap_scan=2

          network={
              ssid="adhoc_network"
              mode="ad-hoc"
              frequency=5180
              key_mgmt=WPA-PSK
              proto=RSN
              pairwise=CCMP
              group=CCMP
              psk="your_pre_shared_key"
          }
        dest: /etc/wpa_supplicant-adhoc.conf
        owner: root
        group: root
        mode: 0644

    - name: Configure ad-hoc network interface
      command:
        cmd: iwconfig wlp3s0 mode ad-hoc essid adhoc_network
        warn: no

    - name: Create custom wpa_supplicant systemd service file
      copy:
        dest: /etc/systemd/system/wpa_supplicant@.service
        content: |
          [Unit]
          Description=WPA supplicant (%I)
          After=sys-subsystem-net-devices-%i.device
          Requires=sys-subsystem-net-devices-%i.device

          [Service]
          Type=simple
          ExecStart=/usr/sbin/wpa_supplicant -B -i %I -c /etc/wpa_supplicant-adhoc.conf -D nl80211,wext

          [Install]
          Alias=multi-user.target.wants/wpa_supplicant@%i.service

    - name: Stop wpa_supplicant
      systemd:
        name: wpa_supplicant
        state: stopped
        enabled: no
        daemon_reload: yes

    - name: Stop wpa_supplicant@wlp3s0
      systemd:
        name: wpa_supplicant@wlp3s0
        state: stopped
        enabled: true
        daemon_reload: yes

    - name: Wait for the ad-hoc network interface to be ready
      pause:
        seconds: 1

    - name: Bring down the ad-hoc network interface
      command:
        cmd: ip link set wlp3s0 down
        warn: no

    - name: Wait for the ad-hoc network interface to be ready
      pause:
        seconds: 1

    - name: Bring up the ad-hoc network interface
      command:
        cmd: ip link set wlp3s0 up
        warn: no

    - name: Wait for the ad-hoc network interface to be ready
      pause:
        seconds: 1

    - name: Start wpa_supplicant@wlp3s0
      systemd:
        name: wpa_supplicant@wlp3s0
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Assign IP address to the ad-hoc network interface
      command:
        cmd: "ip addr add 12.0.0.{{ 100 + (inventory_hostname[-1:]) | int }}/24 dev wlp3s0"
        warn: no
