---
- name: Install Ceph
  hosts: cluster
  become: true
  tasks:
    - name: Add Ceph repository key
      ansible.builtin.apt_key:
        url: "https://download.ceph.com/keys/release.asc"
        state: present

    - name: Add Ceph repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.ceph.com/debian-pacific/ {{ ansible_distribution_release }} main"
        state: present
        filename: ceph

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Cephadm
      ansible.builtin.apt:
        name:
          - cephadm
        state: present

    - name: Add cephadm Pacific repository
      ansible.builtin.command:
        cmd: cephadm add-repo --release pacific
      register: ceph_repo_add
      changed_when: "'repository added' in ceph_repo_add.stdout"

    - name: Install ceph-common
      ansible.builtin.command:
        cmd: cephadm install ceph-common
      register: ceph_common_install
      changed_when: "ceph_common_install.stdout | length > 0"

- name: Configure Ceph
  hosts: cluster
  become: true
  tasks:
    - name: Create Cephadm directory
      ansible.builtin.file:
        path: /etc/ceph
        state: directory
        mode: "0755"

    - name: Bootstrap Ceph cluster (run only on first node)
      ansible.builtin.command:
        cmd: "cephadm bootstrap --mon-ip {{ cluster_ip[inventory_hostname][1] }}"
      args:
        creates: /etc/ceph/ceph.conf
      when: "inventory_hostname == groups['cluster'][0]"

    - name: Fetch ceph keyring and config from bootstrap host
      ansible.builtin.fetch:
        src: "/etc/ceph/{{ item }}"
        dest: /tmp/
        flat: true
      loop:
        - ceph.conf
        - ceph.client.admin.keyring
      when: "inventory_hostname == groups['cluster'][0]"


    - name: Copy ceph keyring and config to other nodes
      ansible.builtin.copy:
        src: /tmp/{{ item }}
        dest: "/etc/ceph/"
        mode: "0755"
      loop:
        - ceph.conf
        - ceph.client.admin.keyring
      when: "inventory_hostname != groups['cluster'][0]"


    - name: Export the ceph public key (run only on first node)
      ansible.builtin.command:
        cmd: "ceph cephadm get-pub-key"
      register: ceph_pub_key
      when: "inventory_hostname == groups['cluster'][0]"
      changed_when: false


    - name: Set ceph_pub_key fact
      ansible.builtin.set_fact:
        ceph_pub_key: "{{ ceph_pub_key.stdout }}"
      when: "inventory_hostname == groups['cluster'][0]"

    - name: Share ceph_pub_key with other machines in the cluster group
      ansible.builtin.set_fact:
        ceph_pub_key: "{{ hostvars[groups['cluster'][0]]['ceph_pub_key'] }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      when: "inventory_hostname == groups['cluster'][0]"
      loop: "{{ groups['cluster'][1:] }}"

    - name: Add cephadm SSH key to authorized_keys
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{ ceph_pub_key }}"

    - name: Add other nodes as Ceph hosts
      ansible.builtin.command:
        cmd: "cephadm shell -- ceph orch host add {{ item }} {{ cluster_ip[item][1] }}"
      loop: "{{ groups['cluster'][1:] }}"
      when: "inventory_hostname == groups['cluster'][0]"
      register: ceph_orch_host_add
      changed_when: "'Added host' in ceph_orch_host_add.stdout_lines"

    - name: Configure Ceph OSDs
      ansible.builtin.command:
        cmd: "cephadm shell -- ceph orch apply osd --all-available-devices"
      when: "inventory_hostname == groups['cluster'][0]"
      register: ceph_orch_apply_osd
      changed_when: "'Created osd(s)' in ceph_orch_apply_osd.stdout"

    - name: Wait for Ceph health to become OK
      ansible.builtin.command:
        cmd: "cephadm shell -- ceph health"
      register: result
      until: "'HEALTH_OK' in result.stdout"
      retries: 10
      delay: 30
      changed_when: false

- name: Configure Ceph RBD for OpenStack
  hosts: cluster
  become: true
  tasks:
    - name: Create Ceph pools for Glance, Cinder, and Nova (run only on first node)
      ansible.builtin.command:
        cmd: "cephadm shell -- ceph osd pool create {{ item }}"
      loop:
        - glance
        - cinder
        - nova
      when: "inventory_hostname == groups['cluster'][0]"
      register: ceph_pool_create
      changed_when: "'pool' in ceph_pool_create.stdout"

    - name: Create Ceph users and keyrings for Glance, Cinder, and Nova (run only on first node)
      ansible.builtin.shell:
        cmd: "cephadm shell -- ceph auth get-or-create client.{{ item }} mon 'profile rbd' osd 'profile rbd pool={{ item }}' > /etc/ceph/ceph.client.{{ item }}.keyring"
      loop:
        - glance
        - cinder
        - nova
      when: "inventory_hostname == groups['cluster'][0]"
      register: ceph_user_create
      changed_when: "'key' in ceph_user_create.stdout"

    - name: Fetch Ceph keyring files for Glance, Cinder, and Nova from the first node
      ansible.builtin.fetch:
        src: "/etc/ceph/ceph.client.{{ item }}.keyring"
        dest: "/tmp/ceph.client.{{ item }}.keyring"
        flat: true
      loop:
        - glance
        - cinder
        - nova
      when: "inventory_hostname == groups['cluster'][0]"

    - name: Copy Ceph keyring files for Glance, Cinder, and Nova to other nodes
      ansible.builtin.copy:
        src: "/tmp/ceph.client.{{ item }}.keyring"
        dest: "/etc/ceph/ceph.client.{{ item }}.keyring"
        mode: "0644"
      loop:
        - glance
        - cinder
        - nova
      when: "inventory_hostname != groups['cluster'][0]"

    - name: Configure OpenStack services to use Ceph
      ansible.builtin.blockinfile:
        path: /etc/ceph/ceph.conf
        block: |
          [client.glance]
          keyring = /etc/ceph/ceph.client.glance.keyring

          [client.cinder]
          keyring = /etc/ceph/ceph.client.cinder.keyring

          [client.nova]
          keyring = /etc/ceph/ceph.client.nova.keyring
        mode: "0600"
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK"

    - name: Test Ceph cluster
      ansible.builtin.command:
        cmd: "cephadm shell -- ceph -s"
      register: ceph_status
      failed_when: "'HEALTH_OK' not in ceph_status.stdout"
      changed_when: false
