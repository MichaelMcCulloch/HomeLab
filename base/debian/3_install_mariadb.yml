---
- name: Install and configure MariaDB
  hosts: cluster
  become: true
  tasks:
    - name: Install MariaDB packages
      ansible.builtin.apt:
        name:
          - mariadb-server
          - python3-pymysql
        state: present

    - name: Configure MariaDB
      ansible.builtin.blockinfile:
        path: /etc/mysql/mariadb.conf.d/99-openstack.cnf
        create: true
        block: |
          [mysqld]
          bind-address = "{{ cluster_ip[inventory_hostname][0] }}"
          default-storage-engine = innodb
          innodb_file_per_table = on
          max_connections = 4096
          collation-server = utf8_general_ci
          character-set-server = utf8
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        mode: "0644"

    - name: Start and enable MariaDB service
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: true

    - name: Set root password and disallow remote login
      block:
        - name: Try with an empty password
          community.mysql.mysql_user:
            check_implicit_admin: true
            host: "localhost"
            login_password: ''
            login_unix_socket: /run/mysqld/mysqld.sock
            login_user: root
            name: root
            password: "{{ mysql_root_password }}"
            priv: "*.*:ALL,GRANT"
      rescue:
        - name: Use the provided mysql_root_password
          community.mysql.mysql_user:
            check_implicit_admin: true
            host: "localhost"
            login_password: '{{ mysql_root_password }}'
            login_unix_socket: /run/mysqld/mysqld.sock
            login_user: root
            name: root
            password: "{{ mysql_root_password }}"
            priv: "*.*:ALL,GRANT"

    - name: Remove anonymous users
      community.mysql.mysql_user:
        host_all: true
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        login_user: root
        name: ''
        state: absent

    - name: Remove test database
      community.mysql.mysql_db:
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        login_user: root
        name: test
        state: absent

    - name: Flush privileges
      community.mysql.mysql_user:
        append_privs: true
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        login_user: root
        name: root
        password: "{{ mysql_root_password }}"
        priv: '*.*:RELOAD'
